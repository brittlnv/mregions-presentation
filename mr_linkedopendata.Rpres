<style>
.small-code pre code {
  font-size: 1em;
}
.small-text {
  font-size: 1em;
}
.reveal section img
{ background:none;
  border:none;
  box-shadow:none;
}
</style>

Marine Regions
========================================================
author: Britt Lonneville
date: 5/27/2020
autosize: true

<img src= "img/logo_marineregions.png"></img>


marineregions.org (1/3)
========================================================


- Standard list of marine georeferenced place names and areas
- One of the data systems being developed and managed by VLIZ.
- Serves as the **geographic backbone for large-scale integrated biogeographic databases**

<img src= "img/worms.png"></img>


marineregions.org (2/3)
========================================================

```{r echo = FALSE, warning = FALSE, fig.width=20, fig.height=9}

library(ggplot2)
library(cowplot)

MR_Timeline_GeoObjects <- read.csv("S:/datac/Geo/Outreach/20200527_LinkedOpenData/mr_linkedopendata/data/MR_Timeline_GeoObjects_20200527.csv")

p <- ggplot(MR_Timeline_GeoObjects) +
      geom_step(aes(x=as.Date(session_date), y=cumsum(n_GeoObjects)),
                col="#27326f",
                size = 2) +
  theme_minimal() +
  scale_y_continuous(breaks = c(0, 25000, 50000),
                     minor_breaks = NULL) +
  scale_x_date(date_breaks = "1 year",
               date_labels = "%Y",
               minor_breaks = NULL)+
  #breaks = as.Date(c("2005-01-01", "2010-01-01","2015-01-01")),
  #date_minor_breaks = "1 year") +
  labs(title= "GeoObjects in the Marine Regions gazetteer",
       x = "Year",
       y = "number of objects")
p
```

Currently: **61,461** marine georeferenced places


marineregions.org (3/3)
========================================================

```{r message=FALSE, warning=FALSE, include=FALSE, paged.print=FALSE}

# load layer
library(sf)
sf_coordinates <- st_read("S:/datac/Geo/Outreach/20200527_LinkedOpenData/mr_linkedopendata/data/Coordinates_20200526.shp")

#install.packages('rnaturalearth')
library(rnaturalearth)

# data needed: graticules20Â° and boundingbox wgs84
graticules_20 <- ne_download(scale = 110, type = 'graticules_20', category = 'physical')
graticules_20 <- st_as_sf(graticules_20)

bbox <- ne_download(scale = 110, type = 'wgs84_bounding_box', category = 'physical')
bbox <- st_as_sf(bbox)


# plot points
map1 <- ggplot() +
  geom_sf(data = bbox, fill = NA) +
  geom_sf(data = graticules_20) +
  geom_sf(data = sf_coordinates, size = 0.2, alpha = 0.5, col ="#27326f") +
  coord_sf(crs=54030) +
  theme_minimal()
```


```{r echo=FALSE, fig.height=12, fig.width=20, message=FALSE, warning=FALSE, paged.print=FALSE}

map1

```
Spatial distribution

Overview of the system (1/3)
========================================================


**Marine Regions GeoObject**

- The identity of each feature or geo-object in the database is given by a unique and persistent **M**arine **R**egions **G**eographic **ID**entifier: **MRGID**.
- Each GeoObject is defined by a placetype and its coordinates (vector), but can have multiple synonyms.

<img src= "img/geoobject.png"></img>


Overview of the system (2/3)
========================================================


**Geometry**

- Latitude, longitude
- Bounding box
- Web Map Service

<img src= "img/geometry.png"></img>


Overview of the system (3/3)
========================================================


**Database structure (partial)**

<img src= "img/dbstructure.png"></img>


Overview of the system: examples (1/3)
========================================================

<img src= "img/adriaticsea.png"></img>


Overview of the system: examples (2/3)
========================================================
class: small-code

```{r echo = TRUE, warning = FALSE}

library(jsonlite)

#Get all features that go by the name 'Adriatic Sea'
jsonlite::fromJSON(
  "http://www.marineregions.org/rest/getGazetteerRecordsByName.json/Adriatic%20Sea/false/false/:)")[,c(1,3,4,5)]
```


Overview of the system: examples (3/3)
========================================================

<img src= "img/flemishcap.png"></img>


Web services (1/4)
========================================================

**SOAP and RESTful Marine Gazetteer webservice**

- getGazetteerRecordsByName
- getGazetteerRecordsByNames
- getGazetteerRecordsByType
- getGazetteerRecordsBySource
- getGazetteerRecordByMRGID
- getGazetteerRelationsByMRGID
- ...

See <http://www.marineregions.org/gazetteer.php?p=webservices>


Web services (2/4)
========================================================
class: small-code

```{r echo = TRUE, warning = FALSE}

library(jsonlite)

#Get all HAB monitoring grids
jsonlite::fromJSON(
  "http://www.marineregions.org/rest/getGazetteerRecordsByType.json/HAB%20monitoring%20grid/:)")[1:10,c(1,3,4,5,11)]
```


Web services (3/4)
========================================================

**OGC web services**

For specific datasets (e.g. Maritime Boundaries, IHO Sea Areas,...) the following OGC webs services are available:

- Web Map Service
<<http://geo.vliz.be/geoserver/MarineRegions/wms?Request=getCapabilities>>

- Web Feature Service
<<http://geo.vliz.be/geoserver/MarineRegions/wfs?Request=getCapabilities>>

- Catalogue Service for the Web
<<http://geonetwork.vliz.be/geonetwork/srv/eng/csw?request=GetCapabilities&service=CSW>>


Web services (4/4)
========================================================
class: small-code

```{r echo=TRUE, message=FALSE, warning=FALSE, paged.print=FALSE}

library(sf)

baseurl <- "http://geo.vliz.be/geoserver/MarineRegions/wfs?"
wfs_request <- URLencode("request=GetFeature&service=WFS&version=2.0.0&typeName=eez&FILTER=<Filter><PropertyIsEqualTo><PropertyName>mrgid</PropertyName><Literal>3293</Literal></PropertyIsEqualTo></Filter>&outputFormat=application/json")

be_eez_wfs <- paste0(baseurl,wfs_request)
be_eez <- st_read(be_eez_wfs)
```

